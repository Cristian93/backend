
package servicios;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EstadoCuenta", targetNamespace = "http://Servicios/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EstadoCuenta {


    /**
     * 
     * @param tipoDocumento
     * @param documento
     * @return
     *     returns servicios.ClsSalidaComparendos
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "Comparendos")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Comparendos", targetNamespace = "http://Servicios/", className = "servicios.Comparendos")
    @ResponseWrapper(localName = "ComparendosResponse", targetNamespace = "http://Servicios/", className = "servicios.ComparendosResponse")
    @Action(input = "http://Servicios/EstadoCuenta/ComparendosRequest", output = "http://Servicios/EstadoCuenta/ComparendosResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Servicios/EstadoCuenta/Comparendos/Fault/Exception")
    })
    public ClsSalidaComparendos comparendos(
        @WebParam(name = "Documento", targetNamespace = "")
        String documento,
        @WebParam(name = "TipoDocumento", targetNamespace = "")
        int tipoDocumento)
        throws Exception_Exception
    ;

    /**
     * 
     * @param documentoRes
     * @param tipDocRes
     * @return
     *     returns servicios.ClsSalidaResoluciones
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "Resoluciones")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Resoluciones", targetNamespace = "http://Servicios/", className = "servicios.Resoluciones")
    @ResponseWrapper(localName = "ResolucionesResponse", targetNamespace = "http://Servicios/", className = "servicios.ResolucionesResponse")
    @Action(input = "http://Servicios/EstadoCuenta/ResolucionesRequest", output = "http://Servicios/EstadoCuenta/ResolucionesResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Servicios/EstadoCuenta/Resoluciones/Fault/Exception")
    })
    public ClsSalidaResoluciones resoluciones(
        @WebParam(name = "DocumentoRes", targetNamespace = "")
        String documentoRes,
        @WebParam(name = "TipDocRes", targetNamespace = "")
        int tipDocRes)
        throws Exception_Exception
    ;

    /**
     * 
     * @param documentoAC
     * @param tipDocAC
     * @return
     *     returns servicios.ClsSalidaAcuerdosPagos
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "AcuerdosPagos")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AcuerdosPagos", targetNamespace = "http://Servicios/", className = "servicios.AcuerdosPagos")
    @ResponseWrapper(localName = "AcuerdosPagosResponse", targetNamespace = "http://Servicios/", className = "servicios.AcuerdosPagosResponse")
    @Action(input = "http://Servicios/EstadoCuenta/AcuerdosPagosRequest", output = "http://Servicios/EstadoCuenta/AcuerdosPagosResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Servicios/EstadoCuenta/AcuerdosPagos/Fault/Exception")
    })
    public ClsSalidaAcuerdosPagos acuerdosPagos(
        @WebParam(name = "DocumentoAC", targetNamespace = "")
        String documentoAC,
        @WebParam(name = "TipDocAC", targetNamespace = "")
        int tipDocAC)
        throws Exception_Exception
    ;

    /**
     * 
     * @param documentoSL
     * @param tipoDocSL
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "SuspencionesLicencias")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SuspencionesLicencias", targetNamespace = "http://Servicios/", className = "servicios.SuspencionesLicencias")
    @ResponseWrapper(localName = "SuspencionesLicenciasResponse", targetNamespace = "http://Servicios/", className = "servicios.SuspencionesLicenciasResponse")
    @Action(input = "http://Servicios/EstadoCuenta/SuspencionesLicenciasRequest", output = "http://Servicios/EstadoCuenta/SuspencionesLicenciasResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Servicios/EstadoCuenta/SuspencionesLicencias/Fault/Exception")
    })
    public String suspencionesLicencias(
        @WebParam(name = "DocumentoSL", targetNamespace = "")
        String documentoSL,
        @WebParam(name = "TipoDocSL", targetNamespace = "")
        String tipoDocSL)
        throws Exception_Exception
    ;

}
